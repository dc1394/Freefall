<Window Height="500"
        Icon="Images/Freefall.ico"
        Loaded="SettingWindow_Loaded"
        Title="設定"
        Width="710"
        WindowStartupLocation="CenterOwner"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:local="clr-namespace:Freefall"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        x:Class="Freefall.SettingWindow">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources/MyStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <Grid.Resources>
            <local:EnumBooleanConverter x:Key="EnumBooleanConverter" />
            <local:StringToBooleanConverter x:Key="StrConverter"/>

            <Style BasedOn="{StaticResource MyRadioButton}"
                   TargetType="RadioButton"
                   x:Key="FreefallSettingRadioButton">
                    <Setter Property="GroupName" Value="ButtonVisibility" />
            </Style>

            <Style BasedOn="{StaticResource MyTextBox}"
                   TargetType="TextBox"
                   x:Key="AlphabetTextBoxStyle">
                   <Setter Property="InputMethod.IsInputMethodEnabled" Value="False" />
            </Style>

            <!-- Notice the defined Style -->
            <ToolTip x:Key="DeltatOfOdeSolverValidationErrorTooltip" Style="{StaticResource ErrorTooltipSyle}" />
            <ToolTip x:Key="IntervalOfOutputCsvValidationErrorTooltip" Style="{StaticResource ErrorTooltipSyle}" />
            <ToolTip x:Key="SolveOdeEpsValidationErrorTooltip" Style="{StaticResource ErrorTooltipSyle}" />


            <Style BasedOn="{StaticResource AlphabetTextBoxStyle}"
                   TargetType="TextBox"
                   x:Key="ErrorDeltatOfOdeSolverTextBoxStyle">
                <Setter Property="local:DeltatBehaviors.IsDeltat" Value="True" />

                <Style.Triggers>
                    <DataTrigger Value="False">
                        <DataTrigger.Binding>
                            <Binding Converter="{StaticResource StrConverter}"
                                     Mode="OneWay"
                                     Path="Tag"
                                     RelativeSource="{RelativeSource Self}" />
                        </DataTrigger.Binding>
                        <Setter Property="TextBox.ToolTip" Value="{StaticResource DeltatOfOdeSolverValidationErrorTooltip}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style BasedOn="{StaticResource AlphabetTextBoxStyle}"
                   TargetType="TextBox"
                   x:Key="ErrorIntervalOfOutputCsvFileTextBoxStyle">
                <Setter Property="local:DeltatBehaviors.IsDeltat" Value="True" />

                <Style.Triggers>
                    <DataTrigger Value="False">
                        <DataTrigger.Binding>
                            <Binding Converter="{StaticResource StrConverter}"
                                     Mode="OneWay"
                                     Path="Tag"
                                     RelativeSource="{RelativeSource Self}" />
                        </DataTrigger.Binding>
                        <Setter Property="TextBox.ToolTip" Value="{StaticResource IntervalOfOutputCsvValidationErrorTooltip}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style BasedOn="{StaticResource AlphabetTextBoxStyle}"
                   TargetType="TextBox"
                   x:Key="ErrorSolveOdeEpsTextBoxStyle">
                <Setter Property="local:DeltatBehaviors.IsDeltat" Value="True" />

                <Style.Triggers>
                    <DataTrigger Value="False">
                        <DataTrigger.Binding>
                            <Binding Converter="{StaticResource StrConverter}"
                                     Mode="OneWay"
                                     Path="Tag"
                                     RelativeSource="{RelativeSource Self}" />
                        </DataTrigger.Binding>
                        <Setter Property="TextBox.ToolTip" Value="{StaticResource SolveOdeEpsValidationErrorTooltip}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Grid.Resources>

        <!-- 行定義 -->
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="0.8*" />
            <RowDefinition Height="0.8*" />
            <RowDefinition Height="0.8*" />
            <RowDefinition Height="0.8*" />
            <RowDefinition Height="0.8*" />
            <RowDefinition Height="0.8*" />
        </Grid.RowDefinitions>

        <!-- 1行目 -->
        <GroupBox ForceCursor="True"
                  Grid.Row="0"
                  Header="常微分方程式の数値解法" 
                  Height="60"
                  HorizontalAlignment="Center"
                  Width="680">
            <StackPanel Style="{StaticResource MyStackPanel}">
                <RadioButton Checked="ToggleButton_OnChecked"
                             Content="Adams-Bashforth-Moulton法"
                             IsChecked="{Binding Converter={StaticResource EnumBooleanConverter},
                                                 ConverterParameter=ADAMS_BASHFORTH_MOULTON, 
                                                 Mode=TwoWay,
                                                 Path=OdeSolver}"
                             Margin="20,0,55,0"
                             Style="{StaticResource FreefallSettingRadioButton}"
                             x:Name="AdamsBashforthMoultonRadioButton" />
                <RadioButton Checked="ToggleButton_OnChecked"
                             Content="Bulirsch-Stoer法"
                             IsChecked="{Binding Converter={StaticResource EnumBooleanConverter},
                                                 ConverterParameter=BULIRSCH_STOER,
                                                 Mode=TwoWay,
                                                 Path=OdeSolver}"
                             Margin="0,0,55,0"
                             Style="{StaticResource FreefallSettingRadioButton}"
                             x:Name="BulirschStoerRadioButton" />
                <RadioButton Checked="ToggleButton_OnChecked"
                             Content="コントロールされたRunge-Kutta法"
                             IsChecked="{Binding Converter={StaticResource EnumBooleanConverter},
                                                 ConverterParameter=CONTROLLED_RUNGE_KUTTA,
                                                 Mode=TwoWay,
                                                 Path=OdeSolver}"
                             Style="{StaticResource FreefallSettingRadioButton}"
                             x:Name="ControlledRungeKuttaRadioButton"/>
            </StackPanel>
        </GroupBox>

        <!-- 2行目 -->
        <StackPanel Grid.Row="1"
                    Style="{StaticResource MyStackPanel}">
            <TextBlock Margin="12,0,0,0" 
                       Style="{StaticResource MyTextBlock}"
                       Text="常微分方程式の数値解法の時間刻みΔt："
                       Width="250" />
            <TextBox Margin="0,0,0,0"
                     Style="{StaticResource ErrorDeltatOfOdeSolverTextBoxStyle}"
                     Tag="{Binding Mode=OneWay, Path=DeltatOfOdeSolverHasError}"
                     Text="{Binding Mode=TwoWay,
                                    NotifyOnValidationError=True,
                                    Path=DeltatOfOdeSolver,
                                    UpdateSourceTrigger=PropertyChanged}"
                     TextChanged="DeltatOfOdeSolverTextBox_OnTextChanged"
                     Validation.Error="DeltatOfOdeSolverTextBox_OnError"
                     Validation.ErrorTemplate="{StaticResource ValidationTemplate}"
                     Width="80"
                     x:Name="DeltatOfOdeSolverTextBox" />
        </StackPanel>

        <!-- 3行目 -->
        <StackPanel Grid.Row="2"
                    Style="{StaticResource MyStackPanel}">
            <TextBlock Margin="12,0,0,0" 
                       Style="{StaticResource MyTextBlock}"
                       Text="常微分方程式の数値解法の許容誤差（Adams-Bashforth-Moulton法では無効）："
                       Width="492" />
            <TextBox Margin="0,0,0,0"
                     Style="{StaticResource ErrorSolveOdeEpsTextBoxStyle}"
                     Tag="{Binding Mode=OneWay, Path=SolveOdeEpsHasError}"
                     Text="{Binding Mode=TwoWay,
                                    NotifyOnValidationError=True,
                                    Path=EpsOfSolveOde,
                                    UpdateSourceTrigger=PropertyChanged}"
                     TextChanged="SolveOdeEpsTextBox_OnTextChanged"
                     Validation.Error="SolveOdeEpsTextBox_OnError"
                     Validation.ErrorTemplate="{StaticResource ValidationTemplate}"
                     Width="80"
                     x:Name="SolveOdeEpsTextBox" />
        </StackPanel>

        <!-- 3行目 -->
        <StackPanel Grid.Row="3"
                    Style="{StaticResource MyStackPanel}">
            <CheckBox Content="計算結果をCSVファイルに出力する"
                      Margin="12,0,0,0"
                      Checked="IsOutputToCsvFileCheckBox_OnChecked"
                      Style="{StaticResource MyBaseCheckBox}"
                      Unchecked="IsOutputToCsvFileCheckBox_OnUnchecked"
                      x:Name="IsOutputToCsvFileCheckBox"/>
        </StackPanel>

        <!-- 4行目 -->
        <StackPanel Grid.Row="4"
                    Style="{StaticResource MyStackPanel}">
            <TextBlock Margin="12,0,0,0" 
                       Style="{StaticResource MyTextBlock}"
                       Text="計算結果をCSVファイルに出力する際の時間間隔（秒）:"
                       Width="325" />
            <TextBox Margin="0,0,0,0"
                     Style="{StaticResource ErrorIntervalOfOutputCsvFileTextBoxStyle}"
                     Tag="{Binding Mode=OneWay, Path=IntervalOfOutputToCsvFileHasError}"
                     Text="{Binding Mode=TwoWay,
                                    NotifyOnValidationError=True,
                                    Path=IntervalOfOutputToCsvFile,
                                    UpdateSourceTrigger=PropertyChanged}"
                     TextChanged="IntervalOfOutputToCsvFileTextBox_OnTextChanged"
                     Validation.Error="IntervalOfOutputToCsvFileTextBox_OnError"
                     Validation.ErrorTemplate="{StaticResource ValidationTemplate}"
                     Width="80"
                     x:Name="IntervalOfOutputToCsvFileTextBox" />
        </StackPanel>

        <!-- 5行目 -->
        <StackPanel Grid.Row="5"
                    Style="{StaticResource MyStackPanel}">
            <TextBlock Margin="12,0,0,0"
                       Style="{StaticResource MyTextBlock}"
                       Text="CSVファイルを作成するパスとファイル名："
                       Width="230"/>
                <TextBox IsReadOnly="True"
                         Margin="0,0,0,0"
                         Style="{StaticResource MyTextBox}"
                         Text="{Binding Mode=TwoWay, Path=CsvFileNameFullPath}"
                         Width="340"
                         x:Name="CsvFileNameFullPathTextBox"/>
                <Button Click="参照Button_Click"
                        Content="参照"
                        Margin="20,0,0,0"
                        Style="{StaticResource MyButton}"
                        Width="85"
                        x:Name="参照Button"/>
        </StackPanel>

        <!-- 6行目 -->
        <StackPanel Grid.Row="6"
                    HorizontalAlignment="Center"
                    Style="{StaticResource MyStackPanel}">
            <Button Click="OkButtonOnClick"
                    Content="OK"
                    Margin="0,0,0,0"
                    Style="{StaticResource MyButton}"
                    x:Name="OkButton"/>
            <Button Click="CancelButtonOnClick"
                    Content="キャンセル"
                    Margin="40,0,0,0"
                    Style="{StaticResource MyButton}" />
            <Button Click="DefaultButtonOnClick"
                    Content="デフォルトに戻す"
                    Margin="40,0,0,0"
                    Style="{StaticResource MyButton}" />
        </StackPanel>
    </Grid>
</Window>
